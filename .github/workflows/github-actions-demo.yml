name: Test of the repository

on:
  push:
    paths: 
     - 'Project1/**'
  pull_request:
    branches: [main]
    paths:
      - 'Project1/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang-format
        run: sudo apt-get update && sudo apt-get install -y clang-format

      - name: Check Google Style
        run: find ./Project1 -name '*.cpp' -o -name '*.h' -o -name '*.hpp' | xargs clang-format --dry-run --Werror
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sanitizer: [address, undefined]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang
          
      - name: Build with sanitizers
        run: |
          cd Project1
          if [ "${{ matrix.sanitizer }}" = "address" ]; then
            clang++ -fsanitize=address -fno-omit-frame-pointer -g -O2 -Wall -Wextra -Werror Source.cpp -o Test-asan
          elif [ "${{ matrix.sanitizer }}" = "undefined" ]; then
            clang++ -fsanitize=undefined -fno-omit-frame-pointer -g -O2 -Wall -Wextra -Werror Source.cpp -o Test-ubsan
          fi

      - name: Run tests with sanitizers
        run: |
          cd Project1
          if [ "${{ matrix.sanitizer }}" = "address" ]; then
            export ASAN_OPTIONS=detect_leaks=1:halt_on_error=1
            ./Test-asan
          elif [ "${{ matrix.sanitizer }}" = "undefined" ]; then
            export UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1
            ./Test-ubsan
          fi
          
  build-normal:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update 
        sudo apt-get install -y build-essential g++

    - name: Build
      run: |
        cd Project1
        make

    - name: Run tests
      run: |
        cd Project1
        ./Test
